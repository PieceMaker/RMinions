% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alplyQueueJobs.R
\name{alplyQueueJobs}
\alias{alplyQueueJobs}
\title{This function constructs all jobs and adds them to the specified queue.}
\usage{
alplyQueueJobs(iter, margins, func, ..., resultsKey,
  buildJobsList = buildJobsList, jobsQueue = "jobsqueue")
}
\arguments{
\item{iter}{Matrix, array, or data frame to be iterated over.}

\item{margins}{Per \code{plyr} docs, a vector giving the subscripts to
split up data by. 1 splits up by rows, 2 by columns and c(1,2) by rows and
columns, and so on for higher dimensions.}

\item{func}{The function to be executed}

\item{buildJobsList}{The function that performs any required tasks and returns
job list with keys Function, Params, and ResultsKey for workers. Defaults
to generic \code{buildJobsList} function.}

\item{jobsQueue}{A string giving the name of the queue where jobs will be placed.
Defaults to \code{jobsqueue}.}
}
\description{
For each iterator, \code{alplyQueueJobs} takes the function to be executed
and any parameters the function needs, bundles them into a job list, and
pushes them to the specified queue.
}
\details{
\code{iter} can be a matrix, array, or data frame to iterate over. It can
also be an integer specifying how many times to repeat the job. Use the
\code{margins} argument to specify how to split \code{iter}. If \code{iter}
is an integer, then set \code{margins} to 1.
}

